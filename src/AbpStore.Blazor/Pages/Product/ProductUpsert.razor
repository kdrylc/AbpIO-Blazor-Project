@page "/product/create"
@page "/product/edit/{Id:int}"
@using AbpStore.DTO;
@using AbpStore.IService;
@inject IProductAppService prod
@inject ICategoryAppService cat
@inject NavigationManager nav

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3"> Product Create</h3>
    <div class="col-12">
        <EditForm Model="Product" OnValidSubmit="UpsertProduct">
            <DataAnnotationsValidator>  </DataAnnotationsValidator>
            <div class="form-group">
                <label>Name</label>
                <InputText @bind-Value="Product.Name"></InputText>
                <ValidationMessage For="(()=>Product.Name)"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Summary</label>
                <InputText @bind-Value="Product.Summary"></InputText>
                <ValidationMessage For="(()=>Product.Summary)"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Detail</label>
                <InputText @bind-Value="Product.Detail"></InputText>
                <ValidationMessage For="(()=>Product.Detail)"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Image</label>
                <InputText @bind-Value="Product.Image"></InputText>
                <ValidationMessage For="(()=>Product.Image)"></ValidationMessage>
            </div>
            <div class="form-group col-6">
                <label>Category</label>
                <InputSelect @bind-Value="Product.CategoryId" class="form-select">
                    <option value="0" disabled="disabled" selected>--Select Category--</option>
                    @foreach (var cat in Categories)
                    {
                        <option value="@cat.Id">@cat.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="()=>Product.CategoryId"></ValidationMessage>
            </div>
            <div class="form-group py-2">
                <button type="submit" class="btn btn-primary">Add</button>
                <NavLink href="category" class="btn btn-warning">
                    Back To Categories
                </NavLink>
            </div>
        </EditForm>
    </div>
</div>


@code {
    [Parameter]
    public int Id { get; set; }
    private ProductDto Product { get; set; } = new ProductDto();
    private List<CategoryDto> Categories { get; set; } = new List<CategoryDto>();
    private string Title { get; set; } = "Create";
    protected override async Task OnInitializedAsync()
    {
        Categories = await cat.GetListAsync();
        Product = await prod.GetByIdAsync(Id);
        Title = "Update";
    }

    public async Task UpsertProduct()
    {
        if (Id == 0)
        {
            var result = await prod.CreateAsync(Product);
        }
        else
        {
            var result = await prod.UpdateAsync(Product);
        }
        nav.NavigateTo("product");
    }
}